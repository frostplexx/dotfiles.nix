name: Build NixOS ISOs

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: false
        default: 'main'
        type: string

jobs:
  discover-configurations:
    runs-on: ubuntu-latest
    outputs:
      configurations: ${{ steps.get-configs.outputs.configs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Get NixOS configurations
        id: get-configs
        run: |
          CONFIGS=$(nix eval --impure --json '.#nixosConfigurations' --apply 'builtins.attrNames')
          echo "configs=${CONFIGS}" >> $GITHUB_OUTPUT
          echo "Discovered configurations: ${CONFIGS}"

  build-isos:
    needs: discover-configurations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: ${{ fromJson(needs.discover-configurations.outputs.configurations) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Build ISO for ${{ matrix.config }}
        run: |
          echo "Building ISO for ${{ matrix.config }}..."
          nix run nixpkgs#nixos-generators -- --format iso --flake .#${{ matrix.config }} -o result
          mkdir -p isos
          cp result/*.iso "isos/${{ matrix.config }}.iso"
          echo "ISO built successfully: isos/${{ matrix.config }}.iso"

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config }}-iso
          path: isos/${{ matrix.config }}.iso
          retention-days: 5

  attach-to-release:
    needs: build-isos
    runs-on: ubuntu-latest
    steps:
      - name: Download all ISO artifacts
        uses: actions/download-artifact@v4
        with:
          path: isos/
          merge-multiple: true

      - name: List ISOs
        run: find isos -type f -name "*.iso" | sort

      - name: Attach ISOs to release
        uses: softprops/action-gh-release@v2
        with:
          files: isos/**/*.iso
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
