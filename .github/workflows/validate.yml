name: "Nix Configuration Validation"
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.github/**'
      - 'README.md'
  pull_request:
    branches:
      - "main"

jobs:
  security-check:
    name: GitGuardian Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.39.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  lint:
    name: Statix Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Install Just
        uses: extractions/setup-just@v3
      - name: Run statix linter
        run: |
          echo "Linting Flake..."
          if just lint; then
            echo "success=true" >> $GITHUB_ENV
          else
            echo "Lint failed, listing flake.lock for debugging:"
            cat flake.lock
            echo "success=false" >> $GITHUB_ENV
            exit 1
          fi


  # flake-check:
  #   name: Test Nix Configurations
  #   needs: [security-check, lint]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Nix
  #       uses: DeterminateSystems/nix-installer-action@v17
  #     - name: Enable Nix Flakes
  #       run: |
  #         mkdir -p ~/.config/nix
  #         echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
  #     - name: Run Check
  #       run: |
  #         echo "Checking flake config"
  #         nix flake check
