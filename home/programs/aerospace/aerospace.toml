# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking


# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []


exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 10

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# on-focus-changed = ['move-mouse window-lazy-center'] # Mouse lazily follows any focus (window or workspace)

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
outer.top =        5
outer.right =      5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]


alt-t = 'layout tiles horizontal vertical'
alt-s = ['layout accordion', 'layout vertical']


shift-cmd-f = ['exec-and-forget kitty --title KITTYFZF -o remember_window_size=no -o initial_window_width=80c -o initial_window_height=10c -e \"aerospace list-windows --all | fzf --bind \"enter:execute(bash -c \"aerospace focus --window-id {1}\")+abort\"\"']

alt-f = 'fullscreen'
alt-shift-f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout

cmd-m = 'macos-native-minimize'
# cmd-shift-m = '''exec-and-forget osascript -e '
# tell application (path to frontmost application as text)
#     try
#         set miniaturized of windows to false -- most applications
#     end try
#     try
#         set collapsed of windows to false -- at least Finder
#     end try
# end tell
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-1 = 'workspace 1'
cmd-2 = 'workspace 2'
cmd-3 = 'workspace 3'
cmd-4 = 'workspace 4'
cmd-5 = 'workspace 5'
cmd-6 = 'workspace 6'
cmd-7 = 'workspace 7'
cmd-8 = 'workspace 8'
cmd-9 = 'workspace 9'
cmd-0 = 'workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-shift-1 = [ 'move-node-to-workspace 1', 'workspace 1']
cmd-shift-2 = [ 'move-node-to-workspace 2', 'workspace 2']
cmd-shift-3 = [ 'move-node-to-workspace 3', 'workspace 3']
cmd-shift-4 = [ 'move-node-to-workspace 4', 'workspace 4']
cmd-shift-5 = [ 'move-node-to-workspace 5', 'workspace 5']
cmd-shift-6 = [ 'move-node-to-workspace 6', 'workspace 6']
cmd-shift-7 = [ 'move-node-to-workspace 7', 'workspace 7']
cmd-shift-8 = [ 'move-node-to-workspace 8', 'workspace 8']
cmd-shift-9 = [ 'move-node-to-workspace 9', 'workspace 9']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'focus-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout

backspace = ['enable toggle']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


ctrl-shift-h = ['join-with left', 'layout accordion' ,'mode main']
ctrl-shift-j = ['join-with down', 'layout accordion' ,'mode main']
ctrl-shift-k = ['join-with up',   'layout accordion' ,'mode main']
ctrl-shift-l = ['join-with right','layout accordion' ,'mode main']


# assign apps to workspaces
# use `aerospace list-apps` to list open apps
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij'
run = 'move-node-to-workspace 2'

# [[on-window-detected]]
# if.app-id = 'net.kovidgoyal.kitty'
# run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.termius-beta.mac'
run = 'move-node-to-workspace 2'


[[on-window-detected]]
if.app-id = 'com.goodnotesapp.x'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'dev.vencord.vesktop'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 5'

# floating rules

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'


[[on-window-detected]]
if.window-title-regex-substring = 'KITTYFZF'
run = 'layout floating'
